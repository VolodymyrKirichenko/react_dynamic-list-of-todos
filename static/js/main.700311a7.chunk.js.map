{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","props","todos","selectedTodo","setSelectedTodo","className","map","todo","id","title","completed","cn","style","width","type","onClick","TodoFilter","onClear","onSubmit","todosStatus","onChangeTitle","onChangeTodoStatus","value","onChange","placeholder","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getUser","userId","TodoModal","onDelete","onError","useState","user","setUser","loadUser","useCallback","a","usersFromServer","useEffect","href","email","name","App","setTodos","setTodosStatus","setTitle","hasLoadingError","setHasLoadingError","handleChangeTitle","e","target","handleClear","handleChangeTodoStatus","handleSubmit","preventDefault","handleDeleteTodo","handleLoadingError","error","Error","isHasTodos","length","filterTodo","filter","toLowerCase","includes","trim","loadTodos","todosFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.700311a7.chunk.js","sourcesContent":["import { FC } from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  setSelectedTodo: (todo: Todo) => void;\n}\n\nexport const TodoList: FC<Props> = (props) => {\n  const { todos, selectedTodo, setSelectedTodo } = props;\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <th />\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo) => {\n          const { id, title, completed } = todo;\n\n          return (\n            <>\n              <tr\n                key={id}\n                data-cy=\"todo\"\n                className=\"\"\n              >\n                <td className=\"is-vcentered\">\n                  {id}\n                </td>\n                <td className=\"is-vcentered\">\n                  {completed && (\n                    <span className=\"icon\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  )}\n                </td>\n                <td className=\"is-vcentered is-expanded\">\n                  <p\n                    className={cn({\n                      'has-text-danger': !completed,\n                      'has-text-success': completed,\n                    })}\n                    style={{ width: 600 }}\n                  >\n                    {title}\n                  </p>\n                  git\n                </td>\n                <td className=\"has-text-right is-vcentered\">\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => setSelectedTodo(todo)}\n                  >\n                    <span className=\"icon\">\n                      <i className={cn(\n                        'far', {\n                          'fa-eye': selectedTodo !== todo,\n                          'fa-eye-slash': selectedTodo === todo,\n                        },\n                      )}\n                      />\n                    </span>\n                  </button>\n                </td>\n              </tr>\n            </>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { ChangeEvent, FC, FormEvent } from 'react';\n\ninterface Props {\n  title: string;\n  onClear: () => void;\n  onSubmit: (e: FormEvent<HTMLFormElement>) => void;\n  todosStatus: string;\n  onChangeTitle: (e: ChangeEvent<HTMLInputElement>) => void;\n  onChangeTodoStatus: (e: ChangeEvent<HTMLSelectElement>) => void;\n}\n\nexport const TodoFilter: FC<Props> = (props) => {\n  const {\n    title,\n    onClear,\n    onSubmit,\n    todosStatus,\n    onChangeTitle,\n    onChangeTodoStatus,\n  } = props;\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={onSubmit}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={todosStatus}\n            onChange={onChangeTodoStatus}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={title}\n          onChange={onChangeTitle}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <div className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {title\n            && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={onClear}\n              />\n            )}\n        </div>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import {\n  FC, useCallback, useEffect, useState,\n} from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ninterface Props {\n  selectedTodo: Todo;\n  onDelete: () => void;\n  onError: (error: string) => void;\n}\n\nexport const TodoModal: FC<Props> = (props) => {\n  const {\n    selectedTodo,\n    onDelete,\n    onError,\n  } = props;\n\n  const {\n    id,\n    completed,\n    userId,\n    title,\n  } = selectedTodo;\n\n  const [user, setUser] = useState<User>();\n\n  const loadUser = useCallback(async () => {\n    try {\n      const usersFromServer = await getUser(userId);\n\n      setUser(usersFromServer);\n    } catch (error) {\n      onError('Error');\n    }\n  }, []);\n\n  useEffect(() => {\n    loadUser();\n  }, [id]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onDelete}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, {\n  ChangeEvent, FormEvent, useCallback, useEffect, useState,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [todosStatus, setTodosStatus] = useState('all');\n  const [title, setTitle] = useState('');\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [hasLoadingError, setHasLoadingError] = useState(false);\n\n  const handleChangeTitle = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  }, []);\n\n  const handleClear = useCallback(() => {\n    setTitle('');\n  }, []);\n\n  const handleChangeTodoStatus = useCallback((e: ChangeEvent<HTMLSelectElement>) => {\n    setTodosStatus(e.target.value);\n  }, []);\n\n  const handleSubmit = useCallback((e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n  }, []);\n\n  const handleDeleteTodo = useCallback(() => {\n    setSelectedTodo(null);\n  }, []);\n\n  const handleLoadingError = useCallback((error) => {\n    setHasLoadingError(true);\n\n    throw new Error(error);\n  }, []);\n\n  const isHasTodos = todos.length > 0;\n\n  const filterTodo = todos.filter((todo) => {\n    switch (todosStatus) {\n      case 'active':\n        return !todo.completed && todo.title.toLowerCase().includes(title.toLowerCase().trim());\n      case 'completed':\n        return todo.completed && todo.title.toLowerCase().includes(title.toLowerCase().trim());\n      default:\n        return todo.title.toLowerCase().includes(title.toLowerCase().trim());\n    }\n  });\n\n  const loadTodos = useCallback(async () => {\n    try {\n      const todosFromServer = await getTodos();\n\n      setTodos(todosFromServer);\n    } catch (error) {\n      handleLoadingError('Error');\n    }\n  }, []);\n\n  useEffect(() => {\n    loadTodos();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                title={title}\n                onClear={handleClear}\n                onSubmit={handleSubmit}\n                todosStatus={todosStatus}\n                onChangeTitle={handleChangeTitle}\n                onChangeTodoStatus={handleChangeTodoStatus}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isHasTodos\n                ? (\n                  <TodoList\n                    todos={filterTodo}\n                    selectedTodo={selectedTodo}\n                    setSelectedTodo={setSelectedTodo}\n                  />\n                )\n                : <Loader />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          onDelete={handleDeleteTodo}\n          onError={handleLoadingError}\n        />\n      )}\n\n      {hasLoadingError && (\n        <div className=\"notification is-danger is-light\">\n          Loading error\n        </div>\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}